from solution import solve
from util.test_runner import run_fun_solution

test_cases = [
  ('1', '*\n'),
  ('2', ' *\n***\n *\n'),
  ('3', '  *\n ***\n*****\n ***\n  *\n'),
  ('4', '   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n'),
  ('5', '    *\n   ***\n  *****\n *******\n*********\n *******\n  *****\n   ***\n    *\n'),
  (
    '6',
    '     *\n    ***\n   *****\n  *******\n *********\n***********\n *********\n  *******\n   *****\n    ***\n     *\n'
  ),
  (
    '7',
    '      *\n     ***\n    *****\n   *******\n  *********\n ***********\n*************\n ***********\n  *********\n   *******\n    *****\n     ***\n      *\n'
  ),
  (
    '8',
    '       *\n      ***\n     *****\n    *******\n   *********\n  ***********\n *************\n***************\n *************\n  ***********\n   *********\n    *******\n     *****\n      ***\n       *\n'
  ),
  (
    '9',
    '        *\n       ***\n      *****\n     *******\n    *********\n   ***********\n  *************\n ***************\n*****************\n ***************\n  *************\n   ***********\n    *********\n     *******\n      *****\n       ***\n        *\n'
  ),
  (
    '10',
    '         *\n        ***\n       *****\n      *******\n     *********\n    ***********\n   *************\n  ***************\n *****************\n*******************\n *****************\n  ***************\n   *************\n    ***********\n     *********\n      *******\n       *****\n        ***\n         *\n'
  ),
]


def test():
  for input_data, expected_output in test_cases:
    output = run_fun_solution(input_data, solve)
    assert output == expected_output, f"Input: {input_data!r} Expected: {expected_output!r}, Got: {output!r}"
